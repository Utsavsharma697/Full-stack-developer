{"ast":null,"code":"var _jsxFileName = \"C:\\\\FrontEndChatApp\\\\frontendchatapp\\\\src\\\\Pages\\\\RegisterPage.js\";\nimport React from \"react\";\nimport axios from \"axios\";\nimport makeToast from \"../Toaster\";\n\nconst RegisterPage = props => {\n  const nameRef = React.createRef();\n  const emailRef = React.createRef();\n  const passwordRef = React.createRef();\n\n  const registerUser = props => {\n    const name = nameRef.current.value;\n    const email = emailRef.current.value;\n    const password = passwordRef.current.value;\n    axios.post(\"http://localhost:8000/user/register\", {\n      name,\n      email,\n      password\n    }).then(response => {\n      makeToast(\"success\", response.data.message);\n      props.history.push(\"/login\");\n    }).catch(err => {\n      // console.log(err);\n      if (err && err.response && err.response.data && err.response.data.message) makeToast(\"error\", err.response.data.message);\n    });\n  };\n\n  return /*#__PURE__*/React.createElement(\"div\", {\n    className: \"card\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 14\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"cardHeader\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 9\n    }\n  }, \" Registration \"), \" \", /*#__PURE__*/React.createElement(\"div\", {\n    className: \"cardBody\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 61\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"inputGroup\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"label\", {\n    htmlFor: \"name\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 9\n    }\n  }, \" Name \"), \" \", /*#__PURE__*/React.createElement(\"input\", {\n    type: \"text\",\n    name: \"name\",\n    id: \"name\",\n    placeholder: \"John Doe\",\n    ref: nameRef,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 49\n    }\n  }), \" \"), \" \", /*#__PURE__*/React.createElement(\"label\", {\n    htmlFor: \"email\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 15\n    }\n  }, \" Email \"), \" \", /*#__PURE__*/React.createElement(\"input\", {\n    type: \"email\",\n    name: \"email\",\n    id: \"email\",\n    placeholder: \"abc@example.com\",\n    ref: emailRef,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 51\n    }\n  }), \" \"), \" \", /*#__PURE__*/React.createElement(\"div\", {\n    className: \"inputGroup\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 60,\n      columnNumber: 15\n    }\n  }, /*#__PURE__*/React.createElement(\"label\", {\n    htmlFor: \"password\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 62,\n      columnNumber: 9\n    }\n  }, \" Password \"), \" \", /*#__PURE__*/React.createElement(\"input\", {\n    type: \"password\",\n    name: \"password\",\n    id: \"password\",\n    placeholder: \"Your Password\",\n    ref: passwordRef,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 63,\n      columnNumber: 57\n    }\n  }), \" \"), \" \", /*#__PURE__*/React.createElement(\"button\", {\n    onClick: registerUser,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 70,\n      columnNumber: 15\n    }\n  }, \" Register \"), \" \");\n};\n\nexport default RegisterPage;","map":{"version":3,"sources":["C:/FrontEndChatApp/frontendchatapp/src/Pages/RegisterPage.js"],"names":["React","axios","makeToast","RegisterPage","props","nameRef","createRef","emailRef","passwordRef","registerUser","name","current","value","email","password","post","then","response","data","message","history","push","catch","err"],"mappings":"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","sourcesContent":["import React from \"react\";\r\nimport axios from \"axios\";\r\nimport makeToast from \"../Toaster\";\r\n\r\nconst RegisterPage = (props) => {\r\n    const nameRef = React.createRef();\r\n    const emailRef = React.createRef();\r\n    const passwordRef = React.createRef();\r\n\r\n    const registerUser = (props) => {\r\n        const name = nameRef.current.value;\r\n        const email = emailRef.current.value;\r\n        const password = passwordRef.current.value;\r\n\r\n        axios\r\n            .post(\"http://localhost:8000/user/register\", {\r\n                name,\r\n                email,\r\n                password,\r\n            })\r\n            .then((response) => {\r\n                makeToast(\"success\", response.data.message);\r\n                props.history.push(\"/login\");\r\n            })\r\n            .catch((err) => {\r\n                // console.log(err);\r\n                if (\r\n                    err &&\r\n                    err.response &&\r\n                    err.response.data &&\r\n                    err.response.data.message\r\n                )\r\n                    makeToast(\"error\", err.response.data.message);\r\n            });\r\n    };\r\n\r\n    return ( <\r\n        div className = \"card\" >\r\n        <\r\n        div className = \"cardHeader\" > Registration < /div> <\r\n        div className = \"cardBody\" >\r\n        <\r\n        div className = \"inputGroup\" >\r\n        <\r\n        label htmlFor = \"name\" > Name < /label> <\r\n        input type = \"text\"\r\n        name = \"name\"\r\n        id = \"name\"\r\n        placeholder = \"John Doe\"\r\n        ref = { nameRef }\r\n        /> <\r\n        /div> <\r\n        label htmlFor = \"email\" > Email < /label> <\r\n        input type = \"email\"\r\n        name = \"email\"\r\n        id = \"email\"\r\n        placeholder = \"abc@example.com\"\r\n        ref = { emailRef }\r\n        /> <\r\n        /div> <\r\n        div className = \"inputGroup\" >\r\n        <\r\n        label htmlFor = \"password\" > Password < /label> <\r\n        input type = \"password\"\r\n        name = \"password\"\r\n        id = \"password\"\r\n        placeholder = \"Your Password\"\r\n        ref = { passwordRef }\r\n        /> <\r\n        /div> <\r\n        button onClick = { registerUser } > Register < /button> <\r\n        /div>\r\n    );\r\n};\r\n\r\nexport default RegisterPage;"]},"metadata":{},"sourceType":"module"}